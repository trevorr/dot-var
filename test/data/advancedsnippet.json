[
  {
    "tag": "_t",
    "text": "Advanced templating: illustrates defines and includes.\n\nInclude external snippet defined in a variable:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.externalsnippet",
        "i": 107
      }
    ],
    "i": 104
  },
  {
    "tag": "_t",
    "text": "\n\nLoad external template from a file:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.loadfile('/snippet.txt')",
        "i": 169
      }
    ],
    "i": 166
  },
  {
    "tag": "_t",
    "text": "\n\nLoad external template from a file and cache in a variable:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def['snippet.txt'] || (def['snippet.txt'] = def.loadfile('/snippet.txt'))",
        "i": 264
      }
    ],
    "i": 261
  },
  {
    "tag": "_t",
    "text": "\n\nUse cached file again:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def['snippet.txt']",
        "i": 367
      }
    ],
    "i": 364
  },
  {
    "tag": "_t",
    "text": "\n\nHere is a def block that will be used later. This snippet can be referenced from external templates too:\n"
  },
  {
    "tag": "##",
    "name": "snippet1",
    "assign": ":",
    "value": "\n\tSome snippet that will be included {{#def.a}} later {{=it.f1}}\n",
    "i": 494
  },
  {
    "tag": "_t",
    "text": "\n\nFirst use of snippet1:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.snippet1",
        "i": 607
      }
    ],
    "i": 604
  },
  {
    "tag": "_t",
    "text": "\n\nSecond use of snippet1:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.snippet1",
        "i": 650
      }
    ],
    "i": 647
  },
  {
    "tag": "_t",
    "text": "\n\nInclude snippet1 if true:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": " true && def.snippet1 ",
        "i": 695
      }
    ],
    "i": 692
  },
  {
    "tag": "_t",
    "text": "\n\nRuntime and Compile time evaluation used together:\n{{= it.f3 + "
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.a + def.b",
        "i": 787
      }
    ],
    "i": 784
  },
  {
    "tag": "_t",
    "text": " }}\n\nInclude xyz or insert 'not found':\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.xyz || 'not found'",
        "i": 845
      }
    ],
    "i": 842
  },
  {
    "tag": "_t",
    "text": "\n\nSet xyz to 1 and exclude result from output:\n"
  },
  {
    "tag": "##",
    "name": "xyz",
    "assign": "=",
    "code": "1",
    "i": 916
  },
  {
    "tag": "_t",
    "text": " is identical to "
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "(def.xyz=1) && \"\"",
        "i": 952
      }
    ],
    "i": 949
  },
  {
    "tag": "_t",
    "text": "\n\nCompare xyz to 1, show 'xyz is not 1' if false:\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.xyz === 1 || 'xyz is not 1'",
        "i": 1024
      }
    ],
    "i": 1021
  },
  {
    "tag": "_t",
    "text": "\n\n{{ if ("
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "!def.abc",
        "i": 1069
      }
    ],
    "i": 1066
  },
  {
    "tag": "_t",
    "text": ") { }}\n\t"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.abc",
        "i": 1090
      }
    ],
    "i": 1087
  },
  {
    "tag": "_t",
    "text": " is falsy\n{{ } }}\n\n{{ if ("
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.xyz === 1",
        "i": 1128
      }
    ],
    "i": 1125
  },
  {
    "tag": "_t",
    "text": ") { }}\n\tif(true) block\n{{ } }}\n\n"
  },
  {
    "tag": "##",
    "name": "fntest",
    "assign": "=",
    "code": " function() {\n\treturn \"Function test worked!\";\n}\n",
    "i": 1175
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.fntest()",
        "i": 1248
      }
    ],
    "i": 1245
  },
  {
    "tag": "_t",
    "text": "\n\nConditionals:\n{{? !it.altEmail }}\n\t<p>\n\tsecond email: {{= it.altEmail }}\n\t</p>\n{{?? true }}\n\telse case worked\n{{?}}\n\nArray iterators\n{{~ it.farray :p }}\n\t<h1>{{=p.farray}}<h1>\n\t{{~ p.farray :value:i }}\n\t\t<h2>{{=i}}: {{=value}}</h2>\n\t\t{{~ value :w }}\n\t\t\t<h3>{{=w}}</h3>\n\t\t{{~}}\n\t{{~}}\n{{~}}\n\n{{~ [\"apple\", \"banana\", \"orange\"] :k}}\n\t{{=k}}\n{{~}}\n\n{{~ (function(){ return [1,2,3]})() :k}}\n\t{{=k}}\n{{~}}\n\n{{ function children(it) { }}\n\n{{?it.Nodes.length}}\n<ul>\n    {{~ it.Nodes :p}}\n    <li>\n        {{=p.title}}\n\t\t{{children(p);}}\n    </li>\n    {{~}}\n</ul>\n{{?}}\n\n{{ } }}\n\n{{ children( {Nodes:[ {title:\"1.1\", Nodes:[ {title:\"1.1.1\", Nodes:[]}, {title:\"1.1.2\", Nodes:[]}] }, { title:\"1.2\", Nodes:[]}, { title:\"1.3\", Nodes:[]}], title:\"1\" } ); }}\n\n\n"
  },
  {
    "tag": "##",
    "name": "block",
    "assign": ":",
    "param": "param",
    "value": "\n\t<div>{{=param}}</div>\n",
    "i": 2009
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "##",
    "name": "block1",
    "assign": ":",
    "param": "param",
    "value": "\n\t<div>{{=param.a}}</div>\n",
    "i": 2058
  },
  {
    "tag": "_t",
    "text": "\n\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "(",
        "i": 2114
      },
      {
        "tag": "#p",
        "def": "block",
        "arg": "'text'",
        "i": 2115
      },
      {
        "tag": "#c",
        "code": " || '') + ",
        "i": 2131
      },
      {
        "tag": "#p",
        "def": "block",
        "arg": "5",
        "i": 2141
      }
    ],
    "i": 2111
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#p",
        "def": "block",
        "arg": "it.f3",
        "i": 2159
      },
      {
        "tag": "#c",
        "code": " || ''",
        "i": 2174
      }
    ],
    "i": 2156
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#p",
        "def": "block",
        "arg": "\"lala tralala\"",
        "i": 2187
      },
      {
        "tag": "#c",
        "code": " || ''",
        "i": 2211
      }
    ],
    "i": 2184
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#p",
        "def": "block1",
        "arg": "{a:1, b:2}",
        "i": 2224
      },
      {
        "tag": "#c",
        "code": " || ''",
        "i": 2245
      }
    ],
    "i": 2221
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "##",
    "name": "testFunctionWithParam",
    "assign": "=",
    "code": " function(str) {\n\t\treturn \"My name is: \" + str;\n\t}\n",
    "i": 2255
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "##",
    "name": "mytestparam",
    "assign": ":",
    "value": " {{=it.name}} ",
    "i": 2342
  },
  {
    "tag": "_t",
    "text": "\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.testFunctionWithParam(def.mytestparam)",
        "i": 2383
      }
    ],
    "i": 2380
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#c",
        "code": "def.testFunctionWithParam(\"\\{\\{=it.name\\}\\}\")",
        "i": 2432
      }
    ],
    "i": 2429
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "##",
    "name": "testParamDef",
    "assign": ":",
    "param": "myparam",
    "value": "\nMy name is: {{=myparam}}\n",
    "i": 2481
  },
  {
    "tag": "_t",
    "text": "\n\n"
  },
  {
    "tag": "#",
    "nodes": [
      {
        "tag": "#p",
        "def": "testParamDef",
        "arg": "it.name",
        "i": 2544
      }
    ],
    "i": 2541
  },
  {
    "tag": "_t",
    "text": "\n\nThe end"
  }
]